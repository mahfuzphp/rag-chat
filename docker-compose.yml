# docker-compose.yml
# Optimized for minimal storage usage
version: '3.8'

services:
  app:
    build: .
    ports:
      - "8008:8008"
    volumes:
      - ./app:/app
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ragdb
      - POSTGRES_USER=raguser
      - POSTGRES_PASSWORD=ragpass
      - QDRANT_HOST=qdrant
      - CHUNK_SIZE=256  # Smaller chunks for storage optimization
      - CHUNK_OVERLAP=20  # Reduced overlap
    depends_on:
      - postgres
      - qdrant
    restart: unless-stopped

  postgres:
    image: postgres:13-alpine  # Using Alpine for smaller image
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=ragdb
      - POSTGRES_USER=raguser
      - POSTGRES_PASSWORD=ragpass
      - POSTGRES_INITDB_ARGS="--data-page-checksum"  # Enable compression
    command: >
      postgres
      -c shared_buffers=256MB
      -c maintenance_work_mem=256MB
      -c effective_cache_size=512MB
      -c effective_io_concurrency=200
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume:
          nocopy: true  # Prevents copying existing data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser -d ragdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - type: volume
        source: qdrant_data
        target: /qdrant/storage
        volume:
          nocopy: true
    environment:
      - QDRANT_STORAGE_OPTIMIZERS_DEFAULT_MAX_SEGMENT_SIZE=10000
      - QDRANT_STORAGE_OPTIMIZERS_MEMMAP_THRESHOLD=10000

volumes:
  postgres_data:
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './data/postgres'
  qdrant_data:
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './data/qdrant'
